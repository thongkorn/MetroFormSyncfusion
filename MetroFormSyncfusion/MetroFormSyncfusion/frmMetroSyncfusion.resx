<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CaptionImage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>